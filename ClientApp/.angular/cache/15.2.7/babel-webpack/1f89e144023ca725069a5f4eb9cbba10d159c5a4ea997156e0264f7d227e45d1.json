{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class FetchChatDataComponent {\n  onSeach() {\n    this.http.get('./db/generic_food').subscribe(result => {\n      console.log(result);\n    });\n  }\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.APIResponse = [];\n    this.SearchText = '';\n    http.get(baseUrl + 'api/chatgpt').subscribe(result => {\n      this.APIResponse = result;\n    }, error => console.error(error));\n  }\n  onSubmit() {\n    const requestPayload = {\n      SearchText: this.SearchText // Include user input in the request\n    };\n\n    console.log(requestPayload.SearchText);\n    this.http.post('https://localhost:44417/api/chatgpt', requestPayload).subscribe(response => {\n      console.log(response.answer);\n      this.APIResponse = response.answer;\n    }, error => console.error(error));\n  }\n}\nFetchChatDataComponent.ɵfac = function FetchChatDataComponent_Factory(t) {\n  return new (t || FetchChatDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchChatDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchChatDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 23,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [\"type\", \"submit\", \"placeholder\", \"\"], [3, \"submit\"], [\"name\", \"ingredients\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"id\", \"output\"], [\"id\", \"response\"]],\n  template: function FetchChatDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"ChatGPT\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"br\");\n      i0.ɵɵelementStart(3, \"form\");\n      i0.ɵɵelement(4, \"input\");\n      i0.ɵɵelementStart(5, \"button\", 1);\n      i0.ɵɵtext(6, \"Submit\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(7, \"br\")(8, \"br\")(9, \"br\");\n      i0.ɵɵelementStart(10, \"form\", 2);\n      i0.ɵɵlistener(\"submit\", function FetchChatDataComponent_Template_form_submit_10_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(11, \"h5\");\n      i0.ɵɵtext(12, \"Insert ingredients\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function FetchChatDataComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.SearchText = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 4);\n      i0.ɵɵtext(15, \"Search Recipe\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(16, \"br\");\n      i0.ɵɵelementStart(17, \"h6\");\n      i0.ɵɵtext(18, \"Output\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 5)(20, \"div\", 5)(21, \"p\", 6);\n      i0.ɵɵtext(22);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.SearchText);\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate(ctx.APIResponse);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\"h6[_ngcontent-%COMP%] {\\n    color:red;\\n  }\\n  #output[_ngcontent-%COMP%] {\\n    background-color: azure;\\n    height: 50px;\\n    width: 100%;\\n    border-color: blue;\\n    border-style: double;\\n  }\"]\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,sBAAsB;EAGjCC,OAAO;IACL,IAAI,CAACC,IAAI,CAACC,GAAG,CAAM,mBAAmB,CAAC,CAACC,SAAS,CAACC,MAAM,IAAG;MACzDC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IAErB,CAAC,CAAC;EAEJ;EAgBAG,YAAoBN,IAAgB,EAAsBO,OAAe;IAArD,SAAI,GAAJP,IAAI;IAJjB,gBAAW,GAAwB,EAAE;IAErC,eAAU,GAAG,EAAE;IAGpBA,IAAI,CAACC,GAAG,CAAsBM,OAAO,GAAG,aAAa,CAAC,CAACL,SAAS,CAACC,MAAM,IAAG;MACxE,IAAI,CAACK,WAAW,GAAGL,MAAM;IAC3B,CAAC,EAAEM,KAAK,IAAIL,OAAO,CAACK,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAGAC,QAAQ;IACN,MAAMC,cAAc,GAAG;MACrBC,UAAU,EAAE,IAAI,CAACA,UAAU,CAAC;KAC7B;;IACDR,OAAO,CAACC,GAAG,CAACM,cAAc,CAACC,UAAU,CAAC;IAEtC,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAM,qCAAqC,EAAEF,cAAc,CAAC,CAACT,SAAS,CAACY,QAAQ,IAAG;MAChGV,OAAO,CAACC,GAAG,CAACS,QAAQ,CAACC,MAAM,CAAC;MAC5B,IAAI,CAACP,WAAW,GAAGM,QAAQ,CAACC,MAAM;IAClC,CAAC,EAAEN,KAAK,IAAIL,OAAO,CAACK,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AA1CWX,sBAAsB;mBAAtBA,sBAAsB,4DAyBa,UAAU;AAAA;AAzB7CA,sBAAsB;QAAtBA,sBAAsB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTnCC,6BAAoB;MAAAA,uBAAO;MAAAA,iBAAK;MAEhCA,qBAAI;MAGJA,4BAAM;MACJA,wBAAO;MACPA,iCAAkC;MAAAA,sBAAM;MAAAA,iBAAS;MAEnDA,qBAAI;MAIJA,gCAA4B;MAAtBA;QAAA,OAAUC,cAAU;MAAA,EAAC;MACzBD,2BAAI;MAAAA,mCAAkB;MAAAA,iBAAK;MAC3BA,iCAAmD;MAA5CA;QAAA;MAAA,EAAwB;MAA/BA,iBAAmD;MACnDA,kCAAsB;MAAAA,8BAAa;MAAAA,iBAAS;MAE9CA,sBAAI;MACJA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MAEfA,+BAAiB;MAEEA,aAAiB;MAAAA,iBAAI;;;MAR/BA,gBAAwB;MAAxBA,wCAAwB;MAQdA,eAAiB;MAAjBA,qCAAiB","names":["FetchChatDataComponent","onSeach","http","get","subscribe","result","console","log","constructor","baseUrl","APIResponse","error","onSubmit","requestPayload","SearchText","post","response","answer","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/dvdjms/Cezanne/RecipeRevel/ClientApp/src/app/fetch-ChatGPT-data/fetch-ChatGPT-data.component.ts","/Users/dvdjms/Cezanne/RecipeRevel/ClientApp/src/app/fetch-ChatGPT-data/fetch-ChatGPT-data.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-ChatGPT-data.component.html'\r\n})\r\n\r\nexport class FetchChatDataComponent {\r\n\r\n\r\n  onSeach() {\r\n    this.http.get<any>('./db/generic_food').subscribe(result => {\r\n      console.log(result)\r\n\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  public APIResponse: ChatGPTRequestDTO[] = [];\r\n\r\n  public SearchText = '';\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<ChatGPTRequestDTO[]>(baseUrl + 'api/chatgpt').subscribe(result => {\r\n      this.APIResponse = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    const requestPayload = {\r\n      SearchText: this.SearchText // Include user input in the request\r\n    };\r\n    console.log(requestPayload.SearchText)\r\n\r\n    this.http.post<any>('https://localhost:44417/api/chatgpt', requestPayload).subscribe(response => {\r\n    console.log(response.answer)\r\n    this.APIResponse = response.answer;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\n\r\ninterface ChatGPTRequestDTO {\r\n  response: string;\r\n}\r\n","<h1 id=\"tableLabel\">ChatGPT</h1>\r\n\r\n<br>\r\n\r\n<!-- <p *ngIf=\"!APIResponse?.length\"><em>Loading...</em></p> -->\r\n<form>\r\n  <input>\r\n  <button type=\"submit\" placeholder>Submit</button>\r\n</form>\r\n<br>\r\n<br>\r\n<br>\r\n\r\n<form (submit)=\"onSubmit()\">\r\n  <h5>Insert ingredients</h5>\r\n  <input [(ngModel)]=\"SearchText\" name=\"ingredients\">\r\n  <button type=\"submit\">Search Recipe</button>\r\n</form>\r\n<br>\r\n<h6>Output</h6>\r\n\r\n<div id=\"output\">\r\n<div id=\"output\" >\r\n  <p id=\"response\">{{ APIResponse }}</p>\r\n</div>\r\n</div>\r\n\r\n<style>\r\n  h6 {\r\n    color:red;\r\n  }\r\n  #output {\r\n    background-color: azure;\r\n    height: 50px;\r\n    width: 100%;\r\n    border-color: blue;\r\n    border-style: double;\r\n  }\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}