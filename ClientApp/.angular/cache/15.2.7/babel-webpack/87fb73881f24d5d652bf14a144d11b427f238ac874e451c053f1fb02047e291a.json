{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewEncapsulation, Input } from '@angular/core';\nlet ModalComponent = class ModalComponent {\n  constructor(modalService, el) {\n    this.modalService = modalService;\n    this.el = el;\n    this.isOpen = false;\n    this.element = el.nativeElement;\n  }\n  ngOnInit() {\n    // add self (this modal instance) to the modal service so it can be opened from any component\n    this.modalService.add(this);\n    // move element to bottom of page (just before </body>) so it can be displayed above everything else\n    document.body.appendChild(this.element);\n    // close modal on background click\n    this.element.addEventListener('click', el => {\n      if (el.target.className === 'modal') {\n        this.close();\n      }\n    });\n  }\n  ngOnDestroy() {\n    // remove self from modal service\n    this.modalService.remove(this);\n    // remove modal element from html\n    this.element.remove();\n  }\n  open() {\n    this.element.style.display = 'block';\n    document.body.classList.add('modal-open');\n    this.isOpen = true;\n  }\n  close() {\n    this.element.style.display = 'none';\n    document.body.classList.remove('modal-open');\n    this.isOpen = false;\n  }\n};\n__decorate([Input()], ModalComponent.prototype, \"id\", void 0);\nModalComponent = __decorate([Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.component.html',\n  styleUrls: ['modal.component.css'],\n  encapsulation: ViewEncapsulation.None\n})], ModalComponent);\nexport { ModalComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,iBAAiB,EAAcC,KAAK,QAA2B,eAAe;AAS3F,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAKvBC,YAAoBC,YAA0B,EAAUC,EAAc;IAAlD,iBAAY,GAAZD,YAAY;IAAwB,OAAE,GAAFC,EAAE;IAH1D,WAAM,GAAG,KAAK;IAIV,IAAI,CAACC,OAAO,GAAGD,EAAE,CAACE,aAAa;EACnC;EAEAC,QAAQ;IACJ;IACA,IAAI,CAACJ,YAAY,CAACK,GAAG,CAAC,IAAI,CAAC;IAE3B;IACAC,QAAQ,CAACC,IAAI,CAACC,WAAW,CAAC,IAAI,CAACN,OAAO,CAAC;IAEvC;IACA,IAAI,CAACA,OAAO,CAACO,gBAAgB,CAAC,OAAO,EAAGR,EAAO,IAAI;MAC/C,IAAIA,EAAE,CAACS,MAAM,CAACC,SAAS,KAAK,OAAO,EAAE;QACjC,IAAI,CAACC,KAAK,EAAE;;IAEpB,CAAC,CAAC;EACN;EAEAC,WAAW;IACP;IACA,IAAI,CAACb,YAAY,CAACc,MAAM,CAAC,IAAI,CAAC;IAE9B;IACA,IAAI,CAACZ,OAAO,CAACY,MAAM,EAAE;EACzB;EAEAC,IAAI;IACA,IAAI,CAACb,OAAO,CAACc,KAAK,CAACC,OAAO,GAAG,OAAO;IACpCX,QAAQ,CAACC,IAAI,CAACW,SAAS,CAACb,GAAG,CAAC,YAAY,CAAC;IACzC,IAAI,CAACc,MAAM,GAAG,IAAI;EACtB;EAEAP,KAAK;IACD,IAAI,CAACV,OAAO,CAACc,KAAK,CAACC,OAAO,GAAG,MAAM;IACnCX,QAAQ,CAACC,IAAI,CAACW,SAAS,CAACJ,MAAM,CAAC,YAAY,CAAC;IAC5C,IAAI,CAACK,MAAM,GAAG,KAAK;EACvB;CACH;AA1CYC,YAARvB,KAAK,EAAE,0CAAa;AADZC,cAAc,eAN1BH,SAAS,CAAC;EACP0B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB,CAAC;EAClCC,aAAa,EAAE5B,iBAAiB,CAAC6B;CACpC,CAAC,GACW3B,cAAc,CA2C1B;SA3CYA,cAAc","names":["Component","ViewEncapsulation","Input","ModalComponent","constructor","modalService","el","element","nativeElement","ngOnInit","add","document","body","appendChild","addEventListener","target","className","close","ngOnDestroy","remove","open","style","display","classList","isOpen","__decorate","selector","templateUrl","styleUrls","encapsulation","None"],"sourceRoot":"","sources":["/Users/dvdjms/Cezanne/RecipeRevel/ClientApp/src/app/modal/modal.component.ts"],"sourcesContent":["import { Component, ViewEncapsulation, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\nimport { ModalService } from './modal.service';\n\n@Component({\n    selector: 'app-modal',\n    templateUrl: 'modal.component.html',\n    styleUrls: ['modal.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n    @Input() id?: string;\n    isOpen = false;\n    private element: any;\n\n    constructor(private modalService: ModalService, private el: ElementRef) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit() {\n        // add self (this modal instance) to the modal service so it can be opened from any component\n        this.modalService.add(this);\n\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\n        document.body.appendChild(this.element);\n\n        // close modal on background click\n        this.element.addEventListener('click', (el: any) => {\n            if (el.target.className === 'modal') {\n                this.close();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        // remove self from modal service\n        this.modalService.remove(this);\n\n        // remove modal element from html\n        this.element.remove();\n    }\n\n    open() {\n        this.element.style.display = 'block';\n        document.body.classList.add('modal-open');\n        this.isOpen = true;\n    }\n\n    close() {\n        this.element.style.display = 'none';\n        document.body.classList.remove('modal-open');\n        this.isOpen = false;\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}