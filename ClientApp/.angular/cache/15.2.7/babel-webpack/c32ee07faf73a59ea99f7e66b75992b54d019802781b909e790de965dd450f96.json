{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction FetchChatDataComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FetchChatDataComponent_table_11_tr_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const responses_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(responses_r4.response);\n  }\n}\nfunction FetchChatDataComponent_table_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 7)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Response\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"tbody\");\n    i0.ɵɵtemplate(6, FetchChatDataComponent_table_11_tr_6_Template, 3, 1, \"tr\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.APIResponse);\n  }\n}\nexport class FetchChatDataComponent {\n  constructor() {\n    this.APIResponse = [];\n    this.SearchText = '';\n  }\n  onSubmit() {\n    const ingredients = this.fondovalor.nativeElement.value;\n    this.ingredients;\n    console.log(this.ingredients);\n    return this.ingredients;\n  }\n}\nFetchChatDataComponent.ɵfac = function FetchChatDataComponent_Factory(t) {\n  return new (t || FetchChatDataComponent)();\n};\nFetchChatDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchChatDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 12,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [3, \"ngSubmit\"], [\"name\", \"ingredients\"], [\"fondovalor\", \"\"], [\"type\", \"submit\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function FetchChatDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"ChatGPTt\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"br\");\n      i0.ɵɵtemplate(3, FetchChatDataComponent_p_3_Template, 3, 0, \"p\", 1);\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function FetchChatDataComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"h5\");\n      i0.ɵɵtext(6, \"Insert ingredients\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3, 4);\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵtext(10, \"Search Recipe\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, FetchChatDataComponent_table_11_Template, 7, 1, \"table\", 6);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.APIResponse == null ? null : ctx.APIResponse.length));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.APIResponse.length);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAIAA,yBAAgC;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAgB/CA,0BAA0C;IACpCA,YAAwB;IAAAA,iBAAK;;;;IAA7BA,eAAwB;IAAxBA,2CAAwB;;;;;IATlCA,gCAA2F;IAGjFA,wBAAQ;IAAAA,iBAAK;IAIrBA,6BAAO;IACLA,8EAGK;IACPA,iBAAQ;;;;IAJoBA,eAAc;IAAdA,4CAAc;;;ACb5C,OAAM,MAAOC,sBAAsB;EAJnCC;IAMS,gBAAW,GAAsB,EAAE;IACnC,eAAU,GAAG,EAAE;;EAKtBC,QAAQ;IACN,MAAMC,WAAW,GAAG,IAAI,CAACC,UAAU,CAACC,aAAa,CAACC,KAAK;IACvD,IAAI,CAACH,WAAW;IAChBI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,WAAW,CAAC;IAC7B,OAAO,IAAI,CAACA,WAAW;EACzB;;AAbWH,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDPnCd,6BAAoB;MAAAA,wBAAQ;MAAAA,iBAAK;MAEjCA,qBAAI;MAEJA,mEAAuD;MAEvDA,+BAA8B;MAAxBA;QAAA,OAAYe,cAAU;MAAA,EAAC;MAC3Bf,0BAAI;MAAAA,kCAAkB;MAAAA,iBAAK;MAC3BA,8BAAsC;MACtCA,iCAAsB;MAAAA,8BAAa;MAAAA,iBAAS;MAG9CA,6EAaQ;;;MArBJA,eAA0B;MAA1BA,iFAA0B;MAQmCA,eAAwB;MAAxBA,6CAAwB","names":["i0","FetchChatDataComponent","constructor","onSubmit","ingredients","fondovalor","nativeElement","value","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/dvdjms/Cezanne/RecipeRevel/ClientApp/src/app/fetch-ChatGPT-data/fetch-ChatGPT-data.component.html","/Users/dvdjms/Cezanne/RecipeRevel/ClientApp/src/app/fetch-ChatGPT-data/fetch-ChatGPT-data.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">ChatGPTt</h1>\r\n\r\n<br>\r\n\r\n<p *ngIf=\"!APIResponse?.length\"><em>Loading...</em></p>\r\n\r\n<form (ngSubmit)=\"onSubmit()\">\r\n  <h5>Insert ingredients</h5>\r\n  <input name=\"ingredients\" #fondovalor>\r\n  <button type=\"submit\">Search Recipe</button>\r\n</form>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"APIResponse.length\">\r\n  <thead>\r\n    <tr>\r\n      <th>Response</th>\r\n\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let responses of APIResponse\">\r\n      <td>{{ responses.response }}</td>\r\n\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-ChatGPT-data.component.html'\r\n})\r\nexport class FetchChatDataComponent {\r\n\r\n  public APIResponse: ChatGPTResponse[] = [];\r\n  public SearchText = '';\r\n\r\n\r\n  public ingredients!: string;\r\n\r\n  onSubmit() {\r\n    const ingredients = this.fondovalor.nativeElement.value\r\n    this.ingredients \r\n    console.log(this.ingredients)\r\n    return this.ingredients\r\n  }\r\n\r\n  // constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n  //   http.get<ChatGPTResponse[]>(baseUrl + 'ChatGPTResponse').subscribe(result => {\r\n  //     this.APIResponse = result;\r\n  //   }, error => console.error(error));\r\n  // }\r\n}\r\n\r\n\r\n\r\n\r\ninterface ChatGPTResponse {\r\n  response: string;\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}