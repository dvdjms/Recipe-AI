{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet FetchChatDataComponent = class FetchChatDataComponent {\n  constructor() {\n    this.APIResponse = [];\n    this.SearchText = '';\n    // constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\n    //   http.get<ChatGPTResponse[]>(baseUrl + 'ChatGPTResponse').subscribe(result => {\n    //     this.APIResponse = result;\n    //   }, error => console.error(error));\n    // }\n  }\n\n  onSubmit() {\n    const ingredients = fondovalor.nativeElement.value;\n    this.ingredients;\n    console.log(this.ingredients);\n    return this.ingredients;\n  }\n};\nFetchChatDataComponent = __decorate([Component({\n  selector: 'app-fetch-data',\n  templateUrl: './fetch-ChatGPT-data.component.html'\n})], FetchChatDataComponent);\nexport { FetchChatDataComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAO1C,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAA5BC;IAEE,gBAAW,GAAsB,EAAE;IACnC,eAAU,GAAG,EAAE;IAYtB;IACA;IACA;IACA;IACA;EACF;;EAZEC,QAAQ;IACN,MAAMC,WAAW,GAAGC,UAAU,CAACC,aAAa,CAACC,KAAK;IAClD,IAAI,CAACH,WAAW;IAChBI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,WAAW,CAAC;IAC7B,OAAO,IAAI,CAACA,WAAW;EACzB;CAOD;AApBYH,sBAAsB,eAJlCD,SAAS,CAAC;EACTU,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE;CACd,CAAC,GACWV,sBAAsB,CAoBlC;SApBYA,sBAAsB","names":["Component","FetchChatDataComponent","constructor","onSubmit","ingredients","fondovalor","nativeElement","value","console","log","selector","templateUrl"],"sourceRoot":"","sources":["/Users/dvdjms/Cezanne/RecipeRevel/ClientApp/src/app/fetch-ChatGPT-data/fetch-ChatGPT-data.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-ChatGPT-data.component.html'\r\n})\r\nexport class FetchChatDataComponent {\r\n\r\n  public APIResponse: ChatGPTResponse[] = [];\r\n  public SearchText = '';\r\n\r\n\r\n  public ingredients!: string;\r\n\r\n  onSubmit() {\r\n    const ingredients = fondovalor.nativeElement.value\r\n    this.ingredients \r\n    console.log(this.ingredients)\r\n    return this.ingredients\r\n  }\r\n\r\n  // constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n  //   http.get<ChatGPTResponse[]>(baseUrl + 'ChatGPTResponse').subscribe(result => {\r\n  //     this.APIResponse = result;\r\n  //   }, error => console.error(error));\r\n  // }\r\n}\r\n\r\n\r\n\r\n\r\ninterface ChatGPTResponse {\r\n  response: string;\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}