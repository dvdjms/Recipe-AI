{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FoodService {\n  constructor(http) {\n    this.http = http;\n    this.genericFood = 'assets/generic_food.csv';\n  }\n  getInfo() {\n    console.log(this.genericFood);\n    return this.http.get(this.genericFood, {\n      responseType: 'text'\n    }).pipe(map(data => {\n      const rows = data.split('\\n'); // Split data into rows\n      const header = rows[0].split(','); // Extract header columns\n      const firstColumnIndex = header.indexOf('Column1'); // Adjust 'Column1' to your actual first column header\n      const filteredValues = rows.slice(1) // Skip header row\n      .map(row => row.split(',')[firstColumnIndex]); // Extract first column value\n      return filteredValues;\n    }));\n  }\n}\nFoodService.ɵfac = function FoodService_Factory(t) {\n  return new (t || FoodService)(i0.ɵɵinject(i1.HttpClient));\n};\nFoodService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FoodService,\n  factory: FoodService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAKlBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,gBAAW,GAAI,yBAA0B;EAEF;EAEvCC,OAAO;IACDC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,WAAW,CAAC;IAC7B,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,IAAI,CAACD,WAAW,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC,CAACC,IAAI,CACnEC,GAAG,CAAEC,IAAY,IAAI;MACnB,MAAMC,IAAI,GAAGD,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;MAC/B,MAAMC,MAAM,GAAGF,IAAI,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;MACnC,MAAME,gBAAgB,GAAGD,MAAM,CAACE,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;MAEpD,MAAMC,cAAc,GAAGL,IAAI,CACxBM,KAAK,CAAC,CAAC,CAAC,CAAC;MAAA,CACTR,GAAG,CAACS,GAAG,IAAIA,GAAG,CAACN,KAAK,CAAC,GAAG,CAAC,CAACE,gBAAgB,CAAC,CAAC,CAAC,CAAC;MAEjD,OAAOE,cAAc;IAC/B,CAAC;EAEP;;AAtBajB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAJN;AAAM","names":["FoodService","constructor","http","getInfo","console","log","genericFood","get","responseType","pipe","map","data","rows","split","header","firstColumnIndex","indexOf","filteredValues","slice","row","factory","providedIn"],"sourceRoot":"","sources":["/Users/dvdjms/Cezanne/RecipeRevel/ClientApp/src/app/fetch-ChatGPT-data/food.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n      providedIn: 'root'\n    })\n\n\nexport class FoodService {\n\n\n      genericFood = ('assets/generic_food.csv');\n\n      constructor(private http: HttpClient) {}\n\n      getInfo() {\n            console.log(this.genericFood);\n            return this.http.get(this.genericFood, { responseType: 'text' }).pipe(\n              map((data: string) => {\n                const rows = data.split('\\n'); // Split data into rows\n                const header = rows[0].split(','); // Extract header columns\n                const firstColumnIndex = header.indexOf('Column1'); // Adjust 'Column1' to your actual first column header\n        \n                const filteredValues = rows\n                  .slice(1) // Skip header row\n                  .map(row => row.split(',')[firstColumnIndex]); // Extract first column value\n        \n                return filteredValues;\n      }\n  \n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}