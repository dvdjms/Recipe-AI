{"ast":null,"code":"import { __decorate } from \"tslib\";\n// import { Injectable } from '@angular/core';\n// @Injectable({\n//       providedIn: 'root'\n//     })\n// export class FoodService {\n//       genericFood = ('assets/generic_food.csv');\n//       constructor(private http: HttpClient) {}\n//       getInfo() {\n//             console.log('this', this.genericFood)\n//             return this.http.get(this.genericFood, {responseType: 'text'})\n//       }\n// }\nlet FoodService = class FoodService {\n  constructor(http) {\n    this.http = http;\n    this.genericFoodUrl = 'assets/generic_food.csv';\n  }\n  getInfo() {\n    return this.http.get(this.genericFoodUrl, {\n      responseType: 'text'\n    }).pipe(map(csvData => this.parseCsvToJson(csvData)));\n  }\n  parseCsvToJson(csvData) {\n    const lines = csvData.split('\\n');\n    const result = [];\n    const headers = lines[0].split(',');\n    for (let i = 1; i < lines.length; i++) {\n      const obj = {};\n      const currentLine = lines[i].split(',');\n      for (let j = 0; j < headers.length; j++) {\n        obj[headers[j]] = currentLine[j];\n      }\n      result.push(obj);\n    }\n    return result;\n  }\n};\nFoodService = __decorate([Injectable({\n  providedIn: 'root'\n})], FoodService);\nexport { FoodService };","map":{"version":3,"mappings":";AACA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAKW,IAAMA,WAAW,GAAjB,MAAMA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,mBAAc,GAAG,yBAAyB;EAEH;EAEvCC,OAAO;IACL,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,IAAI,CAACC,cAAc,EAAE;MAAEC,YAAY,EAAE;IAAM,CAAE,CAAC,CAChEC,IAAI,CACHC,GAAG,CAACC,OAAO,IAAI,IAAI,CAACC,cAAc,CAACD,OAAO,CAAC,CAAC,CAC7C;EACL;EAEQC,cAAc,CAACD,OAAe;IACpC,MAAME,KAAK,GAAGF,OAAO,CAACG,KAAK,CAAC,IAAI,CAAC;IACjC,MAAMC,MAAM,GAAG,EAAE;IACjB,MAAMC,OAAO,GAAGH,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IAEnC,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC,MAAME,GAAG,GAAG,EAAE;MACd,MAAMC,WAAW,GAAGP,KAAK,CAACI,CAAC,CAAC,CAACH,KAAK,CAAC,GAAG,CAAC;MAEvC,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,OAAO,CAACE,MAAM,EAAEG,CAAC,EAAE,EAAE;QACvCF,GAAG,CAACH,OAAO,CAACK,CAAC,CAAC,CAAC,GAAGD,WAAW,CAACC,CAAC,CAAC;;MAGlCN,MAAM,CAACO,IAAI,CAACH,GAAG,CAAC;;IAGlB,OAAOJ,MAAM;EACf;CACD;AA/BYb,WAAW,eAH3BqB,UAAU,CAAC;EACNC,UAAU,EAAE;CACb,CAAC,GACWtB,WAAW,CA+BvB;SA/BYA,WAAW","names":["FoodService","constructor","http","getInfo","get","genericFoodUrl","responseType","pipe","map","csvData","parseCsvToJson","lines","split","result","headers","i","length","obj","currentLine","j","push","Injectable","providedIn"],"sourceRoot":"","sources":["/Users/dvdjms/Cezanne/RecipeRevel/ClientApp/src/app/food-search/food.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\n// import { Injectable } from '@angular/core';\n\n// @Injectable({\n//       providedIn: 'root'\n//     })\n\n\n// export class FoodService {\n\n//       genericFood = ('assets/generic_food.csv');\n\n//       constructor(private http: HttpClient) {}\n\n//       getInfo() {\n//             console.log('this', this.genericFood)\n//             return this.http.get(this.genericFood, {responseType: 'text'})\n//       }\n// }\n\n@Injectable({\n      providedIn: 'root'\n    })\n    export class FoodService {\n    \n      genericFoodUrl = 'assets/generic_food.csv';\n    \n      constructor(private http: HttpClient) {}\n    \n      getInfo() {\n        return this.http.get(this.genericFoodUrl, { responseType: 'text' })\n          .pipe(\n            map(csvData => this.parseCsvToJson(csvData))\n          );\n      }\n    \n      private parseCsvToJson(csvData: string): any[] {\n        const lines = csvData.split('\\n');\n        const result = [];\n        const headers = lines[0].split(',');\n    \n        for (let i = 1; i < lines.length; i++) {\n          const obj = {};\n          const currentLine = lines[i].split(',');\n    \n          for (let j = 0; j < headers.length; j++) {\n            obj[headers[j]] = currentLine[j];\n          }\n    \n          result.push(obj);\n        }\n    \n        return result;\n      }\n    }\n    "]},"metadata":{},"sourceType":"module","externalDependencies":[]}