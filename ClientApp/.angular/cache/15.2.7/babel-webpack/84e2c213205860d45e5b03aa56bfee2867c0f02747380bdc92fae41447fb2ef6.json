{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FoodService {\n  constructor(http) {\n    this.http = http;\n    this.genericFood = 'assets/generic_food.csv';\n  }\n  getInfo() {\n    const convertFile = () => {\n      const input = this.foodService;\n      const reader = new FileReader();\n      reader.onload = () => {\n        let text = reader.result;\n        // console.log('CSV: ', text.substring(0, 100) + '...');\n        reader.readAsText(text);\n        console.log(this.genericFood);\n        return this.http.get(this.genericFood, {\n          responseType: 'text'\n        });\n      };\n    };\n  }\n}\nFoodService.ɵfac = function FoodService_Factory(t) {\n  return new (t || FoodService)(i0.ɵɵinject(i1.HttpClient));\n};\nFoodService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FoodService,\n  factory: FoodService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAIlBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,gBAAW,GAAI,yBAA0B;EAEF;EAEvCC,OAAO;IAED,MAAMC,WAAW,GAAG,MAAK;MACnB,MAAMC,KAAK,GAAG,IAAI,CAACC,WAAW;MAE9B,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAG,MAAK;QACrB,IAAIC,IAAI,GAAGH,MAAM,CAACI,MAAM;QACxB;QACAJ,MAAM,CAACK,UAAU,CAACF,IAAI,CAAC;QAK7BG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,WAAW,CAAC;QAC7B,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAC,IAAI,CAACD,WAAW,EAAE;UAACE,YAAY,EAAE;QAAM,CAAC,CAAC;MACpE,CAAC;IACP,CAAC;EAAA;;AAvBYjB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAJN;AAAM","names":["FoodService","constructor","http","getInfo","convertFile","input","foodService","reader","FileReader","onload","text","result","readAsText","console","log","genericFood","get","responseType","factory","providedIn"],"sourceRoot":"","sources":["/Users/dvdjms/Cezanne/RecipeRevel/ClientApp/src/app/food-search/food.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n      providedIn: 'root'\n    })\n\n\nexport class FoodService {\n\n      genericFood = ('assets/generic_food.csv');\n\n      constructor(private http: HttpClient) {}\n\n      getInfo() {\n\n            const convertFile = () => {\n                  const input = this.foodService;\n            \n                  const reader = new FileReader();\n                  reader.onload = () => {\n                  let text = reader.result;\n                  // console.log('CSV: ', text.substring(0, 100) + '...');\n                  reader.readAsText(text)\n\n\n\n\n            console.log(this.genericFood)\n            return this.http.get(this.genericFood, {responseType: 'text'})\n      }\n}}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}