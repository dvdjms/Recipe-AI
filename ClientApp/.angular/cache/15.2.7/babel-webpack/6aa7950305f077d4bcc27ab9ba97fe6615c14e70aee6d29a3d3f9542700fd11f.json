{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FoodService {\n  constructor(http) {\n    this.http = http;\n    this.genericFood = 'assets/generic_food.csv';\n  }\n  getInfo() {\n    const input = this.genericFood;\n    const reader = new FileReader();\n    reader.onload = () => {\n      let text = reader.result;\n      console.log('CSV: ', text.substring(0, 100) + '...');\n      reader.readAsText(inputtext);\n      console.log(this.genericFood);\n      return this.http.get(this.genericFood, {\n        responseType: 'text'\n      });\n    };\n  }\n}\nFoodService.ɵfac = function FoodService_Factory(t) {\n  return new (t || FoodService)(i0.ɵɵinject(i1.HttpClient));\n};\nFoodService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FoodService,\n  factory: FoodService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAIlBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,gBAAW,GAAI,yBAA0B;EAEF;EAEvCC,OAAO;IAED,MAAMC,KAAK,GAAG,IAAI,CAACC,WAAW;IAE9B,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/BD,MAAM,CAACE,MAAM,GAAG,MAAK;MACrB,IAAIC,IAAI,GAAGH,MAAM,CAACI,MAAM;MACxBC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,IAAI,CAACI,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;MACpDP,MAAM,CAACQ,UAAU,CAACC,SAAS,CAAC;MAK5BJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,WAAW,CAAC;MAC7B,OAAO,IAAI,CAACH,IAAI,CAACc,GAAG,CAAC,IAAI,CAACX,WAAW,EAAE;QAACY,YAAY,EAAE;MAAM,CAAC,CAAC;IACpE,CAAC;EACP;;AAtBajB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAJN;AAAM","names":["FoodService","constructor","http","getInfo","input","genericFood","reader","FileReader","onload","text","result","console","log","substring","readAsText","inputtext","get","responseType","factory","providedIn"],"sourceRoot":"","sources":["/Users/dvdjms/Cezanne/RecipeRevel/ClientApp/src/app/food-search/food.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n      providedIn: 'root'\n    })\n\n\nexport class FoodService {\n\n      genericFood = ('assets/generic_food.csv');\n\n      constructor(private http: HttpClient) {}\n\n      getInfo() {\n\n            const input = this.genericFood;\n            \n            const reader = new FileReader();\n            reader.onload = () => {\n            let text = reader.result;\n            console.log('CSV: ', text.substring(0, 100) + '...');\n            reader.readAsText(inputtext)\n\n\n\n\n            console.log(this.genericFood)\n            return this.http.get(this.genericFood, {responseType: 'text'})\n      }\n}}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}