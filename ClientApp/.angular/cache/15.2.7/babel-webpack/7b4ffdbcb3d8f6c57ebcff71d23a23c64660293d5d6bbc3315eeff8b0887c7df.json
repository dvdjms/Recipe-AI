{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nlet FetchChatDataComponent = class FetchChatDataComponent {\n  // public ChatResponse = '';\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.APIResponse = [];\n    this.SearchText = '';\n    http.get(baseUrl + 'api/chatgpt').subscribe(result => {\n      this.APIResponse = result;\n    }, error => console.error(error));\n  }\n  onSubmit() {\n    const requestPayload = {\n      SearchText: this.SearchText // Include user input in the request\n    };\n\n    console.log(requestPayload.SearchText);\n    this.http.post('https://localhost:44417/api/chatgpt', requestPayload).subscribe(result => {\n      console.log('...and this', result);\n      this.APIResponse = result;\n    }, error => console.error(error));\n  }\n};\nFetchChatDataComponent = __decorate([Component({\n  selector: 'app-fetch-data',\n  templateUrl: './fetch-ChatGPT-data.component.html'\n}), __param(1, Inject('BASE_URL'))], FetchChatDataComponent);\nexport { FetchChatDataComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAS1C,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAKjC;EAEAC,YAAoBC,IAAgB,EAAsBC,OAAe;IAArD,SAAI,GAAJD,IAAI;IALjB,gBAAW,GAAwB,EAAE;IAErC,eAAU,GAAG,EAAE;IAIpBA,IAAI,CAACE,GAAG,CAAsBD,OAAO,GAAG,aAAa,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MACxE,IAAI,CAACC,WAAW,GAAGD,MAAM;IAE3B,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAGAE,QAAQ;IACN,MAAMC,cAAc,GAAG;MACrBC,UAAU,EAAE,IAAI,CAACA,UAAU,CAAC;KAC7B;;IACDH,OAAO,CAACI,GAAG,CAACF,cAAc,CAACC,UAAU,CAAC;IAEtC,IAAI,CAACV,IAAI,CAACY,IAAI,CAAsB,qCAAqC,EAAEH,cAAc,CAAC,CAACN,SAAS,CAACC,MAAM,IAAG;MAC5GG,OAAO,CAACI,GAAG,CAAC,aAAa,EAAEP,MAAM,CAAC;MAClC,IAAI,CAACC,WAAW,GAAGD,MAAM;IAC3B,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAEnC;CACD;AA3BYR,sBAAsB,eALlCF,SAAS,CAAC;EACTiB,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE;CACd,CAAC,EASuCC,iBAAM,CAAC,UAAU,CAAC,IAP9CjB,sBAAsB,CA2BlC;SA3BYA,sBAAsB","names":["Component","Inject","FetchChatDataComponent","constructor","http","baseUrl","get","subscribe","result","APIResponse","error","console","onSubmit","requestPayload","SearchText","log","post","selector","templateUrl","__param"],"sourceRoot":"","sources":["/Users/dvdjms/Cezanne/RecipeRevel/ClientApp/src/app/fetch-ChatGPT-data/fetch-ChatGPT-data.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-ChatGPT-data.component.html'\r\n})\r\n\r\nexport class FetchChatDataComponent {\r\n\r\n  public APIResponse: ChatGPTRequestDTO[] = [];\r\n\r\n  public SearchText = '';\r\n  // public ChatResponse = '';\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<ChatGPTRequestDTO[]>(baseUrl + 'api/chatgpt').subscribe(result => {\r\n      this.APIResponse = result;\r\n\r\n    }, error => console.error(error));\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    const requestPayload = {\r\n      SearchText: this.SearchText // Include user input in the request\r\n    };\r\n    console.log(requestPayload.SearchText)\r\n\r\n    this.http.post<ChatGPTRequestDTO[]>('https://localhost:44417/api/chatgpt', requestPayload).subscribe(result => {\r\n      console.log('...and this', result)  \r\n      this.APIResponse = result;\r\n    }, error => console.error(error));\r\n\r\n  }\r\n}\r\n\r\n\r\ninterface ChatGPTRequestDTO {\r\n  response: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}