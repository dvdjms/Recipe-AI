{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nlet FetchChatDataComponent = class FetchChatDataComponent {\n  constructor(dialogRef, http, baseUrl) {\n    this.dialogRef = dialogRef;\n    this.APIResponse = '';\n    this.SearchText = '';\n    this.bodyText = 'This text can be updated in modal 1';\n    http.get(baseUrl + 'api/chatgpt').subscribe(result => {\n      this.APIResponse += result;\n    }, error => console.error(error));\n  }\n  onSubmit() {\n    const requestPayload = {\n      SearchText: this.SearchText\n    };\n    console.log(requestPayload.SearchText);\n    this.http.post('https://localhost:44417/api/chatgpt', requestPayload).subscribe(response => {\n      console.log(response.answer);\n      this.APIResponse = response.answer;\n    }, error => console.error(error));\n  }\n  formatResponse(response) {\n    return response.replace(/\\n/g, '<br>');\n  }\n};\nFetchChatDataComponent = __decorate([Component({\n  selector: 'app-fetch-ChatGPT-data',\n  templateUrl: './fetch-ChatGPT-data.component.html',\n  styleUrls: ['./fetch-ChatGPT-data.component.css']\n}), __param(2, Inject('BASE_URL'))], FetchChatDataComponent);\nexport { FetchChatDataComponent };\nlet dialogRef = dialog.open(UserProfileComponent, {\n  height: '400px',\n  width: '600px'\n});","map":{"version":3,"names":["Component","Inject","FetchChatDataComponent","constructor","dialogRef","http","baseUrl","APIResponse","SearchText","bodyText","get","subscribe","result","error","console","onSubmit","requestPayload","log","post","response","answer","formatResponse","replace","__decorate","selector","templateUrl","styleUrls","__param","dialog","open","UserProfileComponent","height","width"],"sources":["/Users/dvdjms/Cezanne/RecipeRevel/ClientApp/src/app/fetch-ChatGPT-data/fetch-ChatGPT-data.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FoodSearchComponent } from '../food-search/food-search.component';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\n\r\n\r\n@Component({\r\n  selector: 'app-fetch-ChatGPT-data',\r\n  templateUrl: './fetch-ChatGPT-data.component.html',\r\n  styleUrls: ['./fetch-ChatGPT-data.component.css'],\r\n})\r\n\r\n\r\nexport class FetchChatDataComponent {\r\n\r\n  public APIResponse: string = '';\r\n  public SearchText = '';\r\n\r\n  constructor(public dialogRef: private http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<ChatGPTRequestDTO[]>(baseUrl + 'api/chatgpt').subscribe(result => {\r\n      this.APIResponse += result;\r\n    }, error => console.error(error));\r\n\r\n  }\r\n  bodyText = 'This text can be updated in modal 1';\r\n\r\n\r\n  onSubmit() {\r\n    const requestPayload = {\r\n      SearchText: this.SearchText\r\n    };\r\n    console.log(requestPayload.SearchText)\r\n\r\n    this.http.post<any>('https://localhost:44417/api/chatgpt', requestPayload).subscribe(response => {\r\n    console.log(response.answer)\r\n    this.APIResponse = response.answer;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  public formatResponse(response: string): string {\r\n    return response.replace(/\\n/g, '<br>');\r\n  }\r\n\r\n  let dialogRef = dialog.open(UserProfileComponent, {\r\n    height: '400px',\r\n    width: '600px',\r\n  });\r\n\r\n\r\n\r\n}\r\n\r\n\r\ninterface ChatGPTRequestDTO {\r\n  response: string;\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAa1C,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAKjCC,YAAmBC,SAAkB,EAACC,IAAgB,EAAsBC,OAAe;IAAxE,KAAAF,SAAS,GAATA,SAAS;IAHrB,KAAAG,WAAW,GAAW,EAAE;IACxB,KAAAC,UAAU,GAAG,EAAE;IAQtB,KAAAC,QAAQ,GAAG,qCAAqC;IAL9CJ,IAAI,CAACK,GAAG,CAAsBJ,OAAO,GAAG,aAAa,CAAC,CAACK,SAAS,CAACC,MAAM,IAAG;MACxE,IAAI,CAACL,WAAW,IAAIK,MAAM;IAC5B,CAAC,EAAEC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAEnC;EAIAE,QAAQA,CAAA;IACN,MAAMC,cAAc,GAAG;MACrBR,UAAU,EAAE,IAAI,CAACA;KAClB;IACDM,OAAO,CAACG,GAAG,CAACD,cAAc,CAACR,UAAU,CAAC;IAEtC,IAAI,CAACH,IAAI,CAACa,IAAI,CAAM,qCAAqC,EAAEF,cAAc,CAAC,CAACL,SAAS,CAACQ,QAAQ,IAAG;MAChGL,OAAO,CAACG,GAAG,CAACE,QAAQ,CAACC,MAAM,CAAC;MAC5B,IAAI,CAACb,WAAW,GAAGY,QAAQ,CAACC,MAAM;IAClC,CAAC,EAAEP,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAEOQ,cAAcA,CAACF,QAAgB;IACpC,OAAOA,QAAQ,CAACG,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;EACxC;CAAC;AA5BUpB,sBAAsB,GAAAqB,UAAA,EAPlCvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,wBAAwB;EAClCC,WAAW,EAAE,qCAAqC;EAClDC,SAAS,EAAE,CAAC,oCAAoC;CACjD,CAAC,EAQyDC,OAAA,IAAA1B,MAAM,CAAC,UAAU,CAAC,E,EALhEC,sBAAsB,CA4BhC;SA5BUA,sBAAsB;AA8BjC,IAAIE,SAAS,GAAGwB,MAAM,CAACC,IAAI,CAACC,oBAAoB,EAAE;EAChDC,MAAM,EAAE,OAAO;EACfC,KAAK,EAAE;CACR,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}